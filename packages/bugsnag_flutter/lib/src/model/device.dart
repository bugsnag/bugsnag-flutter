import '_model_extensions.dart';

/// Stateless information set by the notifier about the device on which the
/// event occurred can be found on this class. These values can be accessed and
/// amended if necessary.
///
/// See also:
/// - [BugsnagDeviceWithState]
/// - [BugsnagEvent]
/// - [BugsnagApp]
class BugsnagDevice {
  /// Android only: The Application Binary Interface used
  List<String>? cpuAbi;

  /// A UUID generated by Bugsnag and used for the individual application on a device
  String? id;

  /// Whether the device has been jailbroken
  bool? jailbroken;

  /// The IETF language tag of the locale used
  String? locale;

  /// The manufacturer of the device used
  String? manufacturer;

  /// The model number of the device used
  String? modelNumber;

  /// The model name of the device used
  String? model;

  /// The name of the operating system running on the device used
  String? osName;

  /// The version of the operating system running on the device used
  String? osVersion;

  /// A collection of names and their versions of the primary languages,
  /// frameworks or runtimes that the application is running on
  Map<String, String>? runtimeVersions;

  /// The total number of bytes of memory on the device
  int? totalMemory;

  BugsnagDevice.fromJson(Map<String, Object?> json)
      : cpuAbi = json.safeGet('cpuAbi'),
        id = json.safeGet('id'),
        jailbroken = json.safeGet('jailbroken'),
        locale = json.safeGet('locale'),
        manufacturer = json.safeGet('manufacturer'),
        modelNumber = json.safeGet('modelNumber'),
        model = json.safeGet('model'),
        osName = json.safeGet('osName'),
        osVersion = json.safeGet('osVersion'),
        runtimeVersions = json
            .safeGet<Map>('runtimeVersions')
            ?.map((key, value) => MapEntry(key as String, value as String)),
        totalMemory = json.safeGet<num>('totalMemory')?.toInt();

  dynamic toJson() => {
        if (cpuAbi != null) 'cpuAbi': cpuAbi,
        if (id != null) 'id': id,
        if (jailbroken != null) 'jailbroken': jailbroken,
        if (locale != null) 'locale': locale,
        if (manufacturer != null) 'manufacturer': manufacturer,
        if (modelNumber != null) 'modelNumber': modelNumber,
        if (model != null) 'model': model,
        if (osName != null) 'osName': osName,
        if (osVersion != null) 'osVersion': osVersion,
        if (runtimeVersions != null) 'runtimeVersions': runtimeVersions,
        if (totalMemory != null) 'totalMemory': totalMemory,
      };
}

/// Stateful information set by the notifier about the device on which the event
/// occurred can be found on this class. These values can be accessed and
/// amended if necessary.
///
/// See also:
/// - [BugsnagDevice]
/// - [BugsnagEvent]
/// - [BugsnagApp]
class BugsnagDeviceWithState extends BugsnagDevice {
  /// The number of free bytes of storage available on the device
  int? freeDisk;

  /// The number of free bytes of memory available on the device
  int? freeMemory;

  /// The orientation of the device when the event occurred: e.g.
  /// portrait or landscape
  String? orientation;

  /// The timestamp on the device when the event occurred
  DateTime? time;

  BugsnagDeviceWithState.fromJson(Map<String, Object?> json)
      : freeDisk = json.safeGet<num>('freeDisk')?.toInt(),
        freeMemory = json.safeGet<num>('freeMemory')?.toInt(),
        orientation = json.safeGet('orientation'),
        time = json
            .safeGet<String>('time')
            ?.let((time) => DateTime.parse(time).toUtc()),
        super.fromJson(json);

  @override
  dynamic toJson() => {
        for (final entry in (super.toJson() as Map<String, dynamic>).entries)
          entry.key: entry.value,
        if (freeDisk != null) 'freeDisk': freeDisk,
        if (freeMemory != null) 'freeMemory': freeMemory,
        if (orientation != null) 'orientation': orientation,
        if (time != null) 'time': time!.toUtc().toIso8601String(),
      };
}
